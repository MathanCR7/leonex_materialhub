// src/pages/_MaterialDataFormPage.scss
@use "../scss/utils/variables" as var;
@use "../scss/utils/mixins" as mix;
@use "../scss/buttons"; // Ensure buttons are imported
@use "sass:color";

.material-data-form-page {
  .page-header {
    margin-bottom: var.$spacer-5; // More space after header
    h1 {
      // General h1 styles from _typography.scss or _base.scss
      .material-code-highlight {
        color: var.$accent-dark; // Use a darker accent for readability
        font-weight: var.$font-weight-bold;
        background-color: color.adjust(
          var.$accent,
          $alpha: -0.85
        ); // Very light accent bg
        padding: var.$spacer-1 var.$spacer-2;
        border-radius: var.$border-radius-sm;
        margin: 0 var.$spacer-1;
      }
      .plant-code-header-info {
        font-size: 0.8em;
        font-weight: var.$font-weight-medium;
        margin-left: var.$spacer-2;
        padding: var.$spacer-1 var.$spacer-2;
        background-color: var.$border-color-light;
        border-radius: var.$border-radius;
        color: var.$text-secondary;
        display: inline-flex;
        align-items: center;
        border: var.$border-width solid var.$muted-border-color;
        svg {
          margin-right: var.$spacer-1;
          color: var.$secondary;
        }
      }
    }
  }

  .material-description-display {
    background-color: color.adjust(
      var.$info,
      $alpha: -0.92
    ); // Even lighter info blue
    padding: var.$spacer-3 var.$spacer-4;
    border-radius: var.$border-radius;
    margin-bottom: var.$spacer-5;
    border-left: 5px solid var.$info; // Thicker accent border
    display: flex;
    align-items: flex-start; // Align icon to top with text
    color: var.$text-primary;
    font-size: 0.95rem;
    line-height: var.$line-height-base;

    svg {
      color: var.$info;
      margin-right: var.$spacer-3;
      font-size: 1.5em; // Larger icon
      flex-shrink: 0;
      margin-top: 0.1em; // Fine-tune alignment
    }
    strong {
      color: var.$text-primary;
      margin-right: var.$spacer-1;
      font-weight: var.$font-weight-semibold;
    }
  }

  .material-form {
    // .card-style is applied in JSX
  }

  .form-actions-top {
    margin-bottom: var.$spacer-4;
    padding-bottom: var.$spacer-4;
    border-bottom: var.$border-width solid var.$border-color-light;
    display: flex; // To align button if needed
    justify-content: flex-end; // Example: align edit button to the right
  }

  .form-section {
    margin-bottom: var.$spacer-5;
    padding-bottom: var.$spacer-4;
    border-bottom: var.$border-width solid var.$border-color-light;

    &:last-child {
      border-bottom: none;
      margin-bottom: 0; // No margin for the last section before actions
    }

    .form-section-title {
      font-size: 1.5rem; // Larger section titles
      color: var.$primary-dark;
      margin-bottom: var.$spacer-4;
      padding-bottom: var.$spacer-2;
      border-bottom: 2px solid var.$primary-light;
      display: inline-block; // To make border only as wide as text
    }
  }

  // .form-grid, .form-group, label, .form-control should be styled globally
  // Add some specific enhancements if needed:
  .form-control[readonly] {
    background-color: var.$bg-color; // Clearer indication of readonly
    cursor: not-allowed;
    // border-style: dashed; // Optional: different border for readonly
  }
  .form-group small.text-danger {
    // For "Counts exceed SOH"
    display: block; // Ensure it takes its own line
    margin-top: var.$spacer-1;
    font-weight: var.$font-weight-medium;
  }

  .media-uploads-section {
    .media-grid {
      display: grid;
      gap: var.$spacer-4;
      grid-template-columns: 1fr; // Default to 1 column on mobile

      @include mix.screen-breakpoint(md-up) {
        grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
      }
      @include mix.screen-breakpoint(lg-up) {
        // Example: Ensure max 2 columns for very wide screens if auto-fit makes too many
        // grid-template-columns: repeat(2, 1fr);
      }
    }
  }

  .defects-section {
    .defect-category-group {
      @include mix.card-style(
        $padding: var.$spacer-4,
        $margin-bottom: var.$spacer-4,
        $background: var.$surface-light,
        // Slightly different bg for these groups
        $border-radius: var.$border-radius-md
      );
      border-left: 4px solid var.$secondary-light; // Accent border

      h3 {
        font-size: 1.25rem;
        color: var.$secondary-dark;
        margin-top: 0;
        margin-bottom: var.$spacer-3;
      }
    }

    .defect-image-controls {
      display: flex;
      gap: var.$spacer-2;
      margin-bottom: var.$spacer-3;
      .btn {
        // Style buttons used for file/camera trigger
        flex-grow: 1; // Make buttons take equal space
        @include mix.screen-breakpoint(sm-up) {
          flex-grow: 0; // Revert to auto width on larger screens
        }
      }
    }

    .defect-previews {
      display: flex;
      flex-wrap: wrap;
      gap: var.$spacer-2;
      margin-top: var.$spacer-3;

      .preview-item.defect-preview-item {
        position: relative;
        border: var.$border-width solid var.$muted-border-color;
        padding: var.$spacer-1;
        border-radius: var.$border-radius;
        background-color: var.$surface-color;
        box-shadow: var.$box-shadow-sm;
        width: 120px; // Slightly larger previews
        height: 120px;
        @include mix.flex-center; // Center the image

        img {
          max-width: 100%;
          max-height: 100%;
          object-fit: cover;
          display: block;
          border-radius: calc(var.$border-radius - var.$spacer-1);
        }

        .btn-remove-defect-img {
          position: absolute;
          top: calc(var.$spacer-1 * -1 - 2px); // Adjust to sit nicely on border
          right: calc(var.$spacer-1 * -1 - 2px);
          background-color: color.adjust(
            var.$danger,
            $alpha: -0.15
          ); // Slightly transparent
          color: var.$text-on-danger;
          border: none;
          border-radius: 50%;
          width: 28px; // Larger remove button
          height: 28px;
          font-size: 0.8rem;
          line-height: 28px;
          text-align: center;
          cursor: pointer;
          @include mix.flex-center;
          box-shadow: var.$box-shadow;
          transition: background-color var.$transition-duration-short,
            transform var.$transition-duration-short;

          &:hover {
            background-color: var.$danger;
            transform: scale(1.1);
          }
          svg {
            margin: 0;
          } // Ensure icon is centered
        }
      }
    }
  }

  .completion-checkbox {
    margin-top: var.$spacer-5;
    padding: var.$spacer-3;
    background-color: var.$surface-light;
    border: var.$border-width solid var.$border-color-light;
    border-radius: var.$border-radius;
    display: flex;
    align-items: center;

    input[type="checkbox"] {
      // Style checkbox more explicitly if needed
      margin-right: var.$spacer-2;
      width: 1.2em;
      height: 1.2em;
      // Consider custom checkbox styles if browser defaults are not sufficient
    }
    label {
      margin-bottom: 0; // Remove default label margin
      font-weight: var.$font-weight-medium;
      color: var.$text-secondary;
    }
  }

  .completion-status-view {
    margin-top: var.$spacer-4;
    font-weight: var.$font-weight-semibold;
    padding: var.$spacer-3;
    background-color: color.adjust(var.$success, $alpha: -0.9);
    border-left: 5px solid var.$success;
    border-radius: var.$border-radius;
    color: var.$success; // Use success color for text too
  }
  .completion-status-view:not(:has(strong:empty)) {
    // If not completed, make it warning
    & strong:not(:contains("Completed")) {
      // This CSS selector might not work robustly
      // JS logic sets formData.is_completed, use that to apply class for styling
      // Example: if formData.is_completed is false, add class "status-draft"
    }
  }
  .status-draft {
    // Add this class via JS if formData.is_completed is false
    background-color: color.adjust(var.$warning, $alpha: -0.9);
    border-left-color: var.$warning;
    color: color.adjust(var.$warning, $lightness: -25%);
  }

  .form-submission-error.alert-danger {
    margin-top: var.$spacer-4;
    // Uses global .alert-danger styling
  }

  .form-actions-bottom {
    margin-top: var.$spacer-5;
    padding-top: var.$spacer-4;
    border-top: var.$border-width solid var.$border-color-light;
    display: flex;
    flex-direction: column; // Stack buttons on mobile
    gap: var.$spacer-3;

    @include mix.screen-breakpoint(sm-up) {
      flex-direction: row; // Side-by-side on larger screens
      justify-content: flex-end; // Align to the right
    }

    .btn {
      // Style all buttons in this container
      width: 100%; // Full width on mobile

      @include mix.screen-breakpoint(sm-up) {
        width: auto;
        min-width: 180px; // Decent min-width for action buttons
      }
    }
    .btn-primary.btn-submit-material {
      // The main submit/update button
      @extend .btn-lg; // Make it large by default
    }
  }

  // Disabled fieldset styling for view-only mode
  fieldset:disabled {
    // Some browsers make text very light, override if needed
    .form-control,
    textarea,
    select {
      color: var.$text-secondary !important; // Ensure text is readable
      background-color: color.adjust(var.$bg-color, $lightness: -2%) !important;
      opacity: 0.85 !important; // Make it slightly less opaque than default disabled
      cursor: default; // Change cursor to default, not 'not-allowed' for viewing
    }
    .form-control[readonly] {
      // Explicit readonly should still look readonly
      background-color: var.$bg-color !important;
    }

    // For ImageUploadField and other custom components, ensure they visually appear disabled
    .image-upload-field .upload-controls-wrapper {
      border-color: var.$border-color-light;
      background-color: var.$bg-color;
      cursor: default;
      &:hover {
        border-color: var.$border-color-light; // No hover effect
      }
    }
    .image-upload-field .btn-upload,
    .defect-image-controls .btn,
    .btn-remove-defect-img,
    .completion-checkbox input[type="checkbox"] {
      display: none !important; // Hide interactive elements in view-only
    }
    .defect-image-controls {
      // Remove margin if controls are hidden
      margin-bottom: 0;
    }
  }
}
