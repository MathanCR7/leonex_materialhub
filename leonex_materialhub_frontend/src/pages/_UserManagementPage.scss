@use "../scss/utils/variables" as var;
@use "../scss/utils/mixins" as mix;
@use "../scss/buttons" as btn;

.user-management-page {
  display: flex;
  flex-direction: column;
  gap: var.$spacer-5;

  .page-header {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    gap: var.$spacer-2;

    h1 {
      display: flex;
      align-items: center;
      gap: var.$spacer-3;
      font-size: 1.6rem; // Adjusted for better mobile scaling
      font-weight: var.$font-weight-bold;
      color: var.$text-primary;
      margin: 0;
    }

    .page-subtitle {
      color: var.$text-secondary;
      margin: 0 0 var.$spacer-2;
      font-size: var.$font-size-base;
      max-width: 600px;
    }

    // Desktop layout for header
    @include mix.screen-breakpoint(md) {
      flex-direction: row;
      justify-content: space-between;
      align-items: center;
      gap: var.$spacer-4;
      h1 {
        font-size: 1.875rem; // Restore larger font size for desktop
      }
      .page-subtitle {
        margin-bottom: 0;
      }
    }
  }

  // --- RESPONSIVE TABLE STYLES ---

  // On mobile, the container is transparent; each row becomes a card.
  .users-table-container {
    width: 100%;
  }

  .users-table {
    width: 100%;
    border-collapse: collapse;

    // --- MOBILE VIEW (Card-based list) ---
    thead {
      display: none;
    }

    tbody tr {
      display: block;

      // FIX: Manually applying styles from the `card-style` mixin and our own styles
      // This is done to ensure all declarations come BEFORE nested rules.
      
      // Declarations from mixin (with our custom padding)
      background-color: var.$surface-color;
      border-radius: var.$border-radius-lg;
      border: var.$border-width solid var.$border-color-light;
      padding: var.$spacer-2; // Custom padding that was passed to the mixin
      transition: var.$transition-default;
      
      // Our custom declarations that were causing the warning
      margin-bottom: var.$spacer-4;
      box-shadow: var.$box-shadow-lg; // Our intended stronger shadow
      
      // The nested rule that was inside the mixin
      @include mix.screen-breakpoint(md) {
        padding: var.$spacer-5;
      }
    }

    td {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: var.$spacer-3 var.$spacer-4;
      text-align: right;
      color: var.$text-secondary;
      border-bottom: 1px solid var.$border-color-light;
      gap: var.$spacer-4;

      // Add labels using ::before pseudo-elements for mobile view
      &::before {
        content: attr(data-label);
        font-weight: var.$font-weight-medium;
        color: var.$text-primary;
        text-align: left;
      }

      &:nth-of-type(1)::before { content: "Username"; }
      &:nth-of-type(2)::before { content: "Role"; }
      &:nth-of-type(3)::before { content: "Status"; }
      &:nth-of-type(4)::before { content: "Assigned Plants"; }
      &:nth-of-type(5)::before { content: "Expires On"; }
      &:nth-of-type(6)::before { content: "Actions"; }

      &:first-child {
        font-weight: var.$font-weight-medium;
        color: var.$text-primary;
      }
      &:last-child {
        border-bottom: none;
      }
    }

    // --- DESKTOP VIEW (Traditional table) ---
    @include mix.screen-breakpoint(md) {
      min-width: 900px;

      .users-table-container {
        overflow-x: auto;
        @include mix.card-style($padding: 0);
      }

      thead {
        display: table-header-group;
      }
      tbody tr {
        display: table-row;
        margin-bottom: 0;
        box-shadow: none;
        border-radius: 0;
        padding: 0;
        transition: var.$transition-default;
        &:hover {
          background-color: var.$surface-light;
        }
      }
      th,
      td {
        display: table-cell;
        padding: var.$spacer-4;
        text-align: left;
        border-bottom: 1px solid var.$border-color-light;
        vertical-align: middle;
        &::before {
          display: none;
        }
      }
      tbody tr:last-child td {
        border-bottom: none;
      }
      th {
        background-color: var.$surface-light;
        font-size: var.$font-size-sm;
        font-weight: var.$font-weight-semibold;
        text-transform: uppercase;
        letter-spacing: 0.05em;
        color: var.$text-secondary;
      }
    }

    .badge {
      display: inline-block;
      padding: 5px 12px;
      font-size: var.$font-size-sm;
      font-weight: var.$font-weight-bold;
      border-radius: var.$border-radius-pill;
      text-transform: capitalize;
      line-height: 1.2;
    }

    .status-badge {
      @extend .badge;
      @include mix.flex-center;
      gap: 6px;

      &::before {
        content: "";
        display: block;
        width: 8px;
        height: 8px;
        border-radius: 50%;
      }
      &.active {
        background-color: rgba(var.$success, 0.1);
        color: var.$success;
        &::before { background-color: var.$success; }
      }
      &.inactive {
        background-color: rgba(var.$danger, 0.1);
        color: var.$danger;
        &::before { background-color: var.$danger; }
      }
    }

    .btn-icon {
      @include btn.btn-icon-styles;
      color: var.$text-secondary;
      &:hover {
        color: var.$primary;
        background-color: var.$surface-light;
      }
    }
  }

  // --- MODAL STYLES ---
  .modal-overlay {
    position: fixed;
    inset: 0;
    background-color: rgba(#0f172a, 0.7);
    -webkit-backdrop-filter: blur(4px);
    backdrop-filter: blur(4px);
    z-index: var.$z-index-modal-overlay;
    padding: var.$spacer-3;
    animation: fadeIn 200ms ease-out;
    @include mix.flex-center;
    @include mix.screen-breakpoint(sm) {
      padding: var.$spacer-4;
    }
  }

  .modal-content {
    width: 100%;
    max-width: 600px;
    max-height: 90vh;
    display: flex;
    flex-direction: column;
    animation: slideInUp 300ms cubic-bezier(0.16, 1, 0.3, 1);
    overflow: hidden;
    @include mix.card-style($padding: 0);
  }

  .modal-header {
    padding: var.$spacer-4;
    border-bottom: 1px solid var.$border-color-light;
    flex-shrink: 0;
    @include mix.flex-center($justify: space-between);
    @include mix.screen-breakpoint(sm) {
      padding: var.$spacer-4 var.$spacer-5;
    }
    h2 {
      margin: 0;
      font-size: var.$font-size-lg;
      font-weight: var.$font-weight-semibold;
      color: var.$text-primary;
    }
    .btn-close-modal {
      @include btn.btn-icon-styles;
    }
  }

  .user-form {
    padding: var.$spacer-4;
    overflow-y: auto;
    flex-grow: 1;
    display: flex;
    flex-direction: column;
    gap: var.$spacer-4;
    @include mix.screen-breakpoint(sm) {
      padding: var.$spacer-5;
    }
  }

  .form-group {
    display: flex;
    flex-direction: column;
    gap: var.$spacer-2;
    label {
      font-weight: var.$font-weight-medium;
      color: var.$text-primary;
      font-size: var.$font-size-sm;
    }
    .form-control,
    .react-select-container .react-select__control {
      width: 100%;
      padding: var.$spacer-2 var.$spacer-3;
      font-size: var.$font-size-base;
      border: 1px solid var.$border-color;
      border-radius: var.$border-radius;
      background-color: var.$surface-color;
      color: var.$text-primary;
      transition: border-color 150ms ease-in-out, box-shadow 150ms ease-in-out;
      &:focus,
      &:focus-within {
        outline: none;
        border-color: var.$primary;
        box-shadow: var.$box-shadow-focus;
      }
    }
    .react-select-container .react-select__control {
      padding: 2px;
      min-height: 44px;
    }
    .react-select-container .react-select__placeholder {
      color: var.$text-muted;
    }
    .react-datepicker-wrapper {
      width: 100%;
      .form-control { width: 100%; }
    }
    &.checkbox-group {
      flex-direction: row;
      align-items: center;
      gap: var.$spacer-3;
      input[type="checkbox"] {
        width: 1.15em;
        height: 1.15em;
        accent-color: var.$primary;
      }
      label {
        font-weight: var.$font-weight-regular;
        font-size: var.$font-size-base;
        color: var.$text-secondary;
      }
    }
  }

  .modal-actions {
    gap: var.$spacer-3;
    padding: var.$spacer-4;
    border-top: 1px solid var.$border-color-light;
    background-color: var.$surface-light;
    flex-shrink: 0;
    @include mix.flex-center($justify: flex-end);
    @include mix.screen-breakpoint(sm) {
      padding: var.$spacer-4 var.$spacer-5;
    }
  }

  .loading-indicator {
    @include mix.flex-center;
    flex-direction: column;
    gap: var.$spacer-4;
    padding: var.$spacer-6;
    color: var.$text-secondary;
    font-size: 1.1rem;
    .spinner-icon.large-spinner {
      font-size: 3rem;
      color: var.$primary;
    }
  }
}

.react-select__menu {
  z-index: var.$z-index-toast !important;
}