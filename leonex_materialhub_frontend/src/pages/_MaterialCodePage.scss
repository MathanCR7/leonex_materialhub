@use "../scss/utils/variables" as var;
@use "../scss/utils/mixins" as mix;

.material-code-page {
  max-width: 900px;
  margin: 0 auto;
  padding: 0 var.$spacer-4; // Padding for mobile
  animation: fadeIn 0.4s ease-out;

  @include mix.screen-breakpoint(sm) {
    padding: 0; // Remove padding on larger screens
  }

  .page-header {
    h1 {
      font-size: 1.8rem;
    }
    .page-subtitle {
      font-size: var.$font-size-base;
    }

    @include mix.screen-breakpoint(md) {
      h1 {
        font-size: 2.2rem;
      }
    }
  }

  .search-bar-wrapper {
    // FIX: Manually applying styles to ensure correct declaration order.
    // All standard CSS properties are declared BEFORE any nested rules (@include).

    // Standard declarations:
    background-color: var.$surface-color;
    border-radius: var.$border-radius-lg;
    padding: 0;
    margin-bottom: var.$spacer-5;
    position: sticky;
    top: var.$spacer-3;
    z-index: 10;
    box-shadow: var.$box-shadow-lg; // Using the desired custom shadow
    transition: var.$transition-default;

    // Nested rules last:
    @include mix.screen-breakpoint(md) {
      top: var.$spacer-4;
    }
  }

  .search-bar-container {
    display: flex;
    align-items: center;

    .search-icon {
      color: var.$text-muted;
      margin: 0 var.$spacer-3;
      font-size: 1.1rem;
    }

    .search-input.form-control {
      border: none;
      box-shadow: none;
      background-color: transparent;
      padding: var.$spacer-3 0;
      font-size: 1rem;
      &:focus {
        box-shadow: none;
      }
    }

    .spinner-icon {
      margin-right: var.$spacer-4;
      color: var.$primary;
    }
  }

  .suggestions-list {
    // FIX: Manually applying styles to ensure correct declaration order.
    // This replicates the `card-style` mixin's behavior without causing warnings.

    // Standard declarations first:
    list-style: none;
    max-height: 70vh;
    overflow-y: auto;
    margin-top: var.$spacer-4;
    background-color: var.$surface-color;
    border-radius: var.$border-radius-lg;
    box-shadow: var.$box-shadow;
    border: 1px solid var.$border-color-light;
    padding: var.$spacer-2 0; // Custom vertical padding for the container
    transition: var.$transition-default;

    // Nested rules last (this preserves the behavior from the original mixin):
    @include mix.screen-breakpoint(md) {
      padding: var.$spacer-5;
    }

    li {
      // --- MOBILE-FIRST LAYOUT (Flexbox Column) ---
      display: flex;
      flex-direction: column;
      gap: var.$spacer-3;
      padding: var.$spacer-3;
      cursor: pointer;
      border-bottom: 1px solid var.$border-color-light;
      transition: all 150ms ease-in-out;

      &:last-child {
        border-bottom: none;
      }

      &:hover,
      &:focus-within {
        background-color: var.$primary-light;
        transform: scale(1.01);
        outline: none;
        box-shadow: var.$box-shadow;
        border-color: transparent;
      }

      .suggestion-header {
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
        gap: var.$spacer-3;
      }

      .suggestion-main-info {
        flex-grow: 1;
        min-width: 0;

        .suggestion-code {
          display: flex;
          align-items: center;
          gap: var.$spacer-2;
          flex-wrap: wrap;

          strong {
            color: var.$primary;
            font-weight: var.$font-weight-semibold;
            font-size: 1rem;
          }
          .mask-code-lookup {
            font-size: var.$font-size-xs;
            color: var.$text-muted;
          }
        }
        .suggestion-description {
          font-size: var.$font-size-sm;
          color: var.$text-secondary;
          margin-top: var.$spacer-1;
        }
      }

      .suggestion-details {
        display: flex;
        flex-wrap: wrap;
        gap: var.$spacer-2;
        align-items: center;

        .detail-item {
          display: inline-flex;
          align-items: center;
          gap: var.$spacer-1;
          font-size: 0.75rem;
          padding: 3px 8px;
          background-color: var.$surface-light;
          border: 1px solid var.$border-color-light;
          border-radius: var.$border-radius-sm;
          color: var.$text-secondary;

          svg {
            font-size: 0.8rem;
          }
        }
      }

      .suggestion-status {
        flex-shrink: 0;

        .status-badge {
          padding: 4px 10px;
          font-size: 0.7rem;
          font-weight: var.$font-weight-bold;
          border-radius: var.$border-radius-pill;
          text-transform: uppercase;
          letter-spacing: 0.5px;
          color: white;
          white-space: nowrap;

          &.completed {
            background-color: var.$success;
          }
          &.not-completed {
            background-color: var.$warning;
            color: var.$text-primary;
          }
          &.no-submission {
            background-color: var.$border-color;
            color: var.$text-secondary;
          }
        }
      }

      // --- DESKTOP LAYOUT (Grid) ---
      @include mix.screen-breakpoint(sm) {
        display: grid;
        grid-template-areas:
          "header header"
          "details details";
        grid-template-columns: 1fr;
        align-items: center;
        gap: var.$spacer-2 var.$spacer-4;
        padding: var.$spacer-3 var.$spacer-4;

        .suggestion-header { grid-area: header; }
        .suggestion-details { grid-area: details; margin-top: 0; }

        &:hover,
        &:focus-within {
          transform: none;
        }
      }

      @include mix.screen-breakpoint(md) {
        grid-template-areas:
          "main status"
          "details details";
        grid-template-columns: 1fr auto;
        
        .suggestion-header { display: contents; }
        .suggestion-main-info { grid-area: main; }
        .suggestion-status { grid-area: status; justify-self: end; }
      }
    }
  }
}